version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5

jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    parallelism: 1
    docker: # run the steps with Docker
      - image: circleci/ruby:2.6.5-stretch-node # ...with this image as the primary container; this is where all `steps` will run
        environment: # environment variables for primary container
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: circleci-demo-ruby
          RAILS_ENV: test
      - image: redis:alpine
      - image: circleci/mysql:5.6
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory

      - run:
          name: install bundler
          command: gem install bundler:2.1.4 && bundle -v

      # Restore bundle cache
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v2-

      - run:
          name: Wait for DB / redis
          command: |
            dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
            dockerize -wait tcp://localhost:6379 -timeout 1m

      - run: # Install Ruby dependencies
          name: Bundle Install
          command: bundle check --path vendor/bundle || bundle install --deployment

      # Store bundle cache for Ruby dependencies
      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Only necessary if app uses webpacker or yarn in some other way
      - restore_cache:
          keys:
            - rails-demo-yarn-{{ checksum "yarn.lock" }}
            - rails-demo-yarn-

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      # Store yarn / webpacker cache
      - save_cache:
          key: rails-demo-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Database create
          command: bin/rails db:create --trace

      - run:
          name: Database setup
          command: bin/rails db:ridgepole:apply

      - run:
          name: Copy Sample ENV
          command: cp dotenv.example .env

      - run:
          name: Run rspec
          command: bundle exec rspec --out test_results/rspec.xml --format progress
      - run:
          name: Post Result to Twitter(succeeded)
          command: bundle exec rake twitter:post_success
      - run:
          name: Post Result to Twitter(failed)
          command: bundle exec rake twitter:post_fail
          when: on_fail
      # Save test results for timing analysis
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test_results
      - codecov/upload:
          file: test_results/rspec.xml

workflows:
    version: 2
    build-deploy:
        jobs:
            - build:
                filters:
                    branches:
                        ignore:
                            - /feature-.*/
